version: '3.5'


services:

#flask config
  flask:
    container_name: flask_app
    build: 
      context: ./flask_app
      dockerfile: dockerfile
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      example-network:
        ipv4_address: 172.16.238.10

#prometheus config
  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    container_name: prometheus-test
    ports:
      - "9999:9999"
    volumes:
      - ./monitoring/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml' 
      - '--web.listen-address=:9999'
    networks:
      example-network:
        ipv4_address: 172.16.238.11

#grafana config
  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    user: "472"
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - ./monitoring/:/etc/grafana/provisioning/
    env_file:
      - ./monitoring/config.monitoring
    networks:
      example-network:
        ipv4_address: 172.16.238.12
  
networks:
  example-network:
    name: example-network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24